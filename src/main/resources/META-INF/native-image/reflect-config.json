[
  {
    "name": "com.sun.media.sound.MidiInDevice",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true
  },
  {
    "name": "com.sun.media.sound.Platform",
    "fields": [
      {
        "name": "loadedLibs"
      }
    ],
    "methods": [
      {
        "name": "loadLibraries",
        "parameterTypes": [
        ]
      },
      {
        "name": "readProperties",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "dev.ops.tools.OpenShiftMinipad",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.util.ClassUtil",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.glassfish.json.JsonProviderImpl",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true
  },
  {
    "name": "java.io.Closeable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.io.Serializable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.AutoCloseable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Cloneable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Comparable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Enum",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Integer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Iterable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Long",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Number",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Thread",
    "methods": [
      {
        "name": "getContextClassLoader",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "java.nio.file.Path"
  },
  {
    "name": "java.nio.file.Paths",
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Connection"
  },
  {
    "name": "java.sql.Driver"
  },
  {
    "name": "java.sql.DriverManager",
    "methods": [
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Time"
  },
  {
    "name": "java.sql.Timestamp",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.Duration",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Instant",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalDate",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.LocalTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.MonthDay",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.OffsetDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.OffsetTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Period",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.Year",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.YearMonth",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZoneId",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZoneOffset",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.time.ZonedDateTime",
    "methods": [
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      }
    ]
  },
  {
    "name": "java.util.AbstractCollection",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.AbstractList",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.AbstractMap",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.ArrayList",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Collection",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.HashMap",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.LinkedHashMap",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.List",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Map",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.RandomAccess",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.sound.midi.MidiUnavailableException",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredClasses": true,
    "allPublicClasses": true
  },
  {
    "name": "picocli.CommandLine$AutoHelpMixin",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.internal.KubernetesDeserializer",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "KIND"
      },
      {
        "name": "API_VERSION"
      },
      {
        "name": "KEY_SEPARATOR"
      },
      {
        "name": "MAP"
      },
      {
        "name": "PACKAGES"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Config",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "clusters"
      },
      {
        "name": "contexts"
      },
      {
        "name": "currentContext"
      },
      {
        "name": "extensions"
      },
      {
        "name": "kind"
      },
      {
        "name": "preferences"
      },
      {
        "name": "users"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedCluster",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "cluster"
      },
      {
        "name": "name"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Cluster",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "certificateAuthority"
      },
      {
        "name": "certificateAuthorityData"
      },
      {
        "name": "extensions"
      },
      {
        "name": "insecureSkipTlsVerify"
      },
      {
        "name": "server"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedContext",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "context"
      },
      {
        "name": "name"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Context",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "cluster"
      },
      {
        "name": "extensions"
      },
      {
        "name": "namespace"
      },
      {
        "name": "user"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Preferences",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "colors"
      },
      {
        "name": "extensions"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedExtension",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "extension"
      },
      {
        "name": "name"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedAuthInfo",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "user"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AuthInfo",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "as"
      },
      {
        "name": "asGroups"
      },
      {
        "name": "asUserExtra"
      },
      {
        "name": "authProvider"
      },
      {
        "name": "clientCertificate"
      },
      {
        "name": "clientCertificateData"
      },
      {
        "name": "clientKey"
      },
      {
        "name": "clientKeyData"
      },
      {
        "name": "exec"
      },
      {
        "name": "extensions"
      },
      {
        "name": "password"
      },
      {
        "name": "token"
      },
      {
        "name": "tokenFile"
      },
      {
        "name": "username"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AuthProviderConfig",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "config"
      },
      {
        "name": "name"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ExecConfig",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "args"
      },
      {
        "name": "command"
      },
      {
        "name": "env"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ExecEnvVar",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "value"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Pod",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "kind"
      },
      {
        "name": "metadata"
      },
      {
        "name": "spec"
      },
      {
        "name": "status"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodList",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "items"
      },
      {
        "name": "kind"
      },
      {
        "name": "metadata"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodStatus",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "conditions"
      },
      {
        "name": "containerStatuses"
      },
      {
        "name": "hostIP"
      },
      {
        "name": "initContainerStatuses"
      },
      {
        "name": "message"
      },
      {
        "name": "nominatedNodeName"
      },
      {
        "name": "phase"
      },
      {
        "name": "podIP"
      },
      {
        "name": "qosClass"
      },
      {
        "name": "reason"
      },
      {
        "name": "startTime"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodCondition",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "lastProbeTime"
      },
      {
        "name": "lastTransitionTime"
      },
      {
        "name": "message"
      },
      {
        "name": "reason"
      },
      {
        "name": "status"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStatus",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "containerID"
      },
      {
        "name": "image"
      },
      {
        "name": "imageID"
      },
      {
        "name": "lastState"
      },
      {
        "name": "name"
      },
      {
        "name": "ready"
      },
      {
        "name": "restartCount"
      },
      {
        "name": "state"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerState",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "running"
      },
      {
        "name": "terminated"
      },
      {
        "name": "waiting"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStateRunning",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "startedAt"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStateTerminated",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "containerID"
      },
      {
        "name": "exitCode"
      },
      {
        "name": "finishedAt"
      },
      {
        "name": "message"
      },
      {
        "name": "reason"
      },
      {
        "name": "signal"
      },
      {
        "name": "startedAt"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStateWaiting",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "message"
      },
      {
        "name": "reason"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ListMeta",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "_continue"
      },
      {
        "name": "remainingItemCount"
      },
      {
        "name": "resourceVersion"
      },
      {
        "name": "selfLink"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ObjectMeta",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "annotations"
      },
      {
        "name": "clusterName"
      },
      {
        "name": "creationTimestamp"
      },
      {
        "name": "deletionGracePeriodSeconds"
      },
      {
        "name": "deletionTimestamp"
      },
      {
        "name": "finalizers"
      },
      {
        "name": "generateName"
      },
      {
        "name": "generation"
      },
      {
        "name": "labels"
      },
      {
        "name": "managedFields"
      },
      {
        "name": "name"
      },
      {
        "name": "namespace"
      },
      {
        "name": "ownerReferences"
      },
      {
        "name": "resourceVersion"
      },
      {
        "name": "selfLink"
      },
      {
        "name": "uid"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ManagedFieldsEntry",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "fieldsType"
      },
      {
        "name": "fieldsV1"
      },
      {
        "name": "manager"
      },
      {
        "name": "operation"
      },
      {
        "name": "time"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FieldsV1",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.LabelSelector",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "matchExpressions"
      },
      {
        "name": "matchLabels"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.LabelSelectorRequirement",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "key"
      },
      {
        "name": "operator"
      },
      {
        "name": "values"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.IntOrString",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "IntVal"
      },
      {
        "name": "Kind"
      },
      {
        "name": "StrVal"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.IntOrString$Deserializer",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodTemplateSpec",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "metadata"
      },
      {
        "name": "spec"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodSpec",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "activeDeadlineSeconds"
      },
      {
        "name": "affinity"
      },
      {
        "name": "automountServiceAccountToken"
      },
      {
        "name": "containers"
      },
      {
        "name": "dnsConfig"
      },
      {
        "name": "dnsPolicy"
      },
      {
        "name": "enableServiceLinks"
      },
      {
        "name": "hostAliases"
      },
      {
        "name": "hostIPC"
      },
      {
        "name": "hostNetwork"
      },
      {
        "name": "hostPID"
      },
      {
        "name": "hostname"
      },
      {
        "name": "imagePullSecrets"
      },
      {
        "name": "initContainers"
      },
      {
        "name": "nodeName"
      },
      {
        "name": "nodeSelector"
      },
      {
        "name": "preemptionPolicy"
      },
      {
        "name": "priority"
      },
      {
        "name": "priorityClassName"
      },
      {
        "name": "readinessGates"
      },
      {
        "name": "restartPolicy"
      },
      {
        "name": "runtimeClassName"
      },
      {
        "name": "schedulerName"
      },
      {
        "name": "securityContext"
      },
      {
        "name": "serviceAccount"
      },
      {
        "name": "serviceAccountName"
      },
      {
        "name": "shareProcessNamespace"
      },
      {
        "name": "subdomain"
      },
      {
        "name": "terminationGracePeriodSeconds"
      },
      {
        "name": "tolerations"
      },
      {
        "name": "volumes"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Affinity",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "nodeAffinity"
      },
      {
        "name": "podAffinity"
      },
      {
        "name": "podAntiAffinity"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeAffinity",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "preferredDuringSchedulingIgnoredDuringExecution"
      },
      {
        "name": "requiredDuringSchedulingIgnoredDuringExecution"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PreferredSchedulingTerm",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "preference"
      },
      {
        "name": "weight"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeSelector",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "nodeSelectorTerms"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeSelectorTerm",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "matchExpressions"
      },
      {
        "name": "matchFields"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeSelectorRequirement",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "key"
      },
      {
        "name": "operator"
      },
      {
        "name": "values"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodAffinity",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "preferredDuringSchedulingIgnoredDuringExecution"
      },
      {
        "name": "requiredDuringSchedulingIgnoredDuringExecution"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodAffinityTerm",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "labelSelector"
      },
      {
        "name": "namespaces"
      },
      {
        "name": "topologyKey"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.WeightedPodAffinityTerm",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "podAffinityTerm"
      },
      {
        "name": "weight"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodAntiAffinity",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "preferredDuringSchedulingIgnoredDuringExecution"
      },
      {
        "name": "requiredDuringSchedulingIgnoredDuringExecution"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Container",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "args"
      },
      {
        "name": "command"
      },
      {
        "name": "env"
      },
      {
        "name": "envFrom"
      },
      {
        "name": "image"
      },
      {
        "name": "imagePullPolicy"
      },
      {
        "name": "lifecycle"
      },
      {
        "name": "livenessProbe"
      },
      {
        "name": "name"
      },
      {
        "name": "ports"
      },
      {
        "name": "readinessProbe"
      },
      {
        "name": "resources"
      },
      {
        "name": "securityContext"
      },
      {
        "name": "stdin"
      },
      {
        "name": "stdinOnce"
      },
      {
        "name": "terminationMessagePath"
      },
      {
        "name": "terminationMessagePolicy"
      },
      {
        "name": "tty"
      },
      {
        "name": "volumeDevices"
      },
      {
        "name": "volumeMounts"
      },
      {
        "name": "workingDir"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.EnvFromSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "configMapRef"
      },
      {
        "name": "prefix"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ConfigMapEnvSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "optional"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecretEnvSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "optional"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Lifecycle",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "postStart"
      },
      {
        "name": "preStop"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Handler",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "exec"
      },
      {
        "name": "httpGet"
      },
      {
        "name": "tcpSocket"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ExecAction",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "command"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HTTPGetAction",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "host"
      },
      {
        "name": "httpHeaders"
      },
      {
        "name": "path"
      },
      {
        "name": "port"
      },
      {
        "name": "scheme"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HTTPHeader",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "value"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.TCPSocketAction",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "host"
      },
      {
        "name": "port"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Probe",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "exec"
      },
      {
        "name": "failureThreshold"
      },
      {
        "name": "httpGet"
      },
      {
        "name": "initialDelaySeconds"
      },
      {
        "name": "periodSeconds"
      },
      {
        "name": "successThreshold"
      },
      {
        "name": "tcpSocket"
      },
      {
        "name": "timeoutSeconds"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerPort",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "containerPort"
      },
      {
        "name": "hostIP"
      },
      {
        "name": "hostPort"
      },
      {
        "name": "name"
      },
      {
        "name": "protocol"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodDNSConfig",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "nameservers"
      },
      {
        "name": "options"
      },
      {
        "name": "searches"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodDNSConfigOption",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "value"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HostAlias",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "hostnames"
      },
      {
        "name": "ip"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.LocalObjectReference",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.OwnerReference",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "blockOwnerDeletion"
      },
      {
        "name": "controller"
      },
      {
        "name": "kind"
      },
      {
        "name": "name"
      },
      {
        "name": "uid"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.TypedLocalObjectReference",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiGroup"
      },
      {
        "name": "kind"
      },
      {
        "name": "name"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ObjectFieldSelector",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "fieldPath"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodReadinessGate",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "conditionType"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodSecurityContext",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsGroup"
      },
      {
        "name": "runAsGroup"
      },
      {
        "name": "runAsNonRoot"
      },
      {
        "name": "runAsUser"
      },
      {
        "name": "seLinuxOptions"
      },
      {
        "name": "supplementalGroups"
      },
      {
        "name": "sysctls"
      },
      {
        "name": "windowsOptions"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SELinuxOptions",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "level"
      },
      {
        "name": "role"
      },
      {
        "name": "type"
      },
      {
        "name": "user"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Sysctl",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "value"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.WindowsSecurityContextOptions",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "gmsaCredentialSpec"
      },
      {
        "name": "gmsaCredentialSpecName"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Toleration",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "effect"
      },
      {
        "name": "key"
      },
      {
        "name": "operator"
      },
      {
        "name": "tolerationSeconds"
      },
      {
        "name": "value"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Volume",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "awsElasticBlockStore"
      },
      {
        "name": "azureDisk"
      },
      {
        "name": "azureFile"
      },
      {
        "name": "cephfs"
      },
      {
        "name": "cinder"
      },
      {
        "name": "configMap"
      },
      {
        "name": "csi"
      },
      {
        "name": "downwardAPI"
      },
      {
        "name": "emptyDir"
      },
      {
        "name": "fc"
      },
      {
        "name": "flexVolume"
      },
      {
        "name": "flocker"
      },
      {
        "name": "gcePersistentDisk"
      },
      {
        "name": "gitRepo"
      },
      {
        "name": "glusterfs"
      },
      {
        "name": "hostPath"
      },
      {
        "name": "iscsi"
      },
      {
        "name": "name"
      },
      {
        "name": "nfs"
      },
      {
        "name": "persistentVolumeClaim"
      },
      {
        "name": "photonPersistentDisk"
      },
      {
        "name": "portworxVolume"
      },
      {
        "name": "projected"
      },
      {
        "name": "quobyte"
      },
      {
        "name": "rbd"
      },
      {
        "name": "scaleIO"
      },
      {
        "name": "secret"
      },
      {
        "name": "storageos"
      },
      {
        "name": "vsphereVolume"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AWSElasticBlockStoreVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "partition"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "volumeID"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AzureDiskVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "cachingMode"
      },
      {
        "name": "diskName"
      },
      {
        "name": "diskURI"
      },
      {
        "name": "fsType"
      },
      {
        "name": "kind"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AzureFileVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "readOnly"
      },
      {
        "name": "secretName"
      },
      {
        "name": "shareName"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.CephFSVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "monitors"
      },
      {
        "name": "path"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "secretFile"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "user"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.CinderVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "volumeID"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ConfigMapVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "defaultMode"
      },
      {
        "name": "items"
      },
      {
        "name": "name"
      },
      {
        "name": "optional"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.KeyToPath",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "key"
      },
      {
        "name": "mode"
      },
      {
        "name": "path"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.CSIVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "driver"
      },
      {
        "name": "fsType"
      },
      {
        "name": "nodePublishSecretRef"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "volumeAttributes"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DownwardAPIVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "defaultMode"
      },
      {
        "name": "items"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DownwardAPIVolumeFile",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fieldRef"
      },
      {
        "name": "mode"
      },
      {
        "name": "path"
      },
      {
        "name": "resourceFieldRef"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ResourceFieldSelector",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "containerName"
      },
      {
        "name": "divisor"
      },
      {
        "name": "resource"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Quantity",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "amount"
      },
      {
        "name": "format"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Quantity$Deserializer",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FCVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "lun"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "targetWWNs"
      },
      {
        "name": "wwids"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FlexVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "driver"
      },
      {
        "name": "fsType"
      },
      {
        "name": "options"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FlockerVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "datasetName"
      },
      {
        "name": "datasetUUID"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GCEPersistentDiskVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "partition"
      },
      {
        "name": "pdName"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GitRepoVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "directory"
      },
      {
        "name": "repository"
      },
      {
        "name": "revision"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GlusterfsVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "endpoints"
      },
      {
        "name": "path"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HostPathVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "path"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ISCSIVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "chapAuthDiscovery"
      },
      {
        "name": "chapAuthSession"
      },
      {
        "name": "fsType"
      },
      {
        "name": "initiatorName"
      },
      {
        "name": "iqn"
      },
      {
        "name": "iscsiInterface"
      },
      {
        "name": "lun"
      },
      {
        "name": "portals"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "targetPortal"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NFSVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "path"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "server"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PersistentVolumeClaimVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "claimName"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PersistentVolume",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "kind"
      },
      {
        "name": "metadata"
      },
      {
        "name": "spec"
      },
      {
        "name": "status"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PersistentVolumeClaim",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "kind"
      },
      {
        "name": "metadata"
      },
      {
        "name": "spec"
      },
      {
        "name": "status"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PersistentVolumeClaimSpec",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "accessModes"
      },
      {
        "name": "dataSource"
      },
      {
        "name": "resources"
      },
      {
        "name": "selector"
      },
      {
        "name": "storageClassName"
      },
      {
        "name": "volumeMode"
      },
      {
        "name": "volumeName"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ResourceRequirements",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "limits"
      },
      {
        "name": "requests"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PhotonPersistentDiskVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "pdID"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PortworxVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "volumeID"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ProjectedVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "defaultMode"
      },
      {
        "name": "sources"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VolumeProjection",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "configMap"
      },
      {
        "name": "downwardAPI"
      },
      {
        "name": "secret"
      },
      {
        "name": "serviceAccountToken"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ConfigMapProjection",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "items"
      },
      {
        "name": "name"
      },
      {
        "name": "optional"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DownwardAPIProjection",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "items"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DownwardAPIVolumeFile",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fieldRef"
      },
      {
        "name": "mode"
      },
      {
        "name": "path"
      },
      {
        "name": "resourceFieldRef"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.QuobyteVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "group"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "registry"
      },
      {
        "name": "tenant"
      },
      {
        "name": "user"
      },
      {
        "name": "volume"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.RBDVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "image"
      },
      {
        "name": "keyring"
      },
      {
        "name": "monitors"
      },
      {
        "name": "pool"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "user"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ScaleIOVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "gateway"
      },
      {
        "name": "protectionDomain"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "sslEnabled"
      },
      {
        "name": "storageMode"
      },
      {
        "name": "storagePool"
      },
      {
        "name": "system"
      },
      {
        "name": "volumeName"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecretVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "defaultMode"
      },
      {
        "name": "items"
      },
      {
        "name": "optional"
      },
      {
        "name": "secretName"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Secret",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "data"
      },
      {
        "name": "kind"
      },
      {
        "name": "metadata"
      },
      {
        "name": "stringData"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecretReference",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "namespace"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.StorageOSVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "secretRef"
      },
      {
        "name": "volumeName"
      },
      {
        "name": "volumeNamespace"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VsphereVirtualDiskVolumeSource",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "fsType"
      },
      {
        "name": "storagePolicyID"
      },
      {
        "name": "storagePolicyName"
      },
      {
        "name": "volumePath"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.WatchEvent",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "object"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VolumeDevice",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "devicePath"
      },
      {
        "name": "name"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VolumeMount",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "mountPath"
      },
      {
        "name": "mountPropagation"
      },
      {
        "name": "name"
      },
      {
        "name": "readOnly"
      },
      {
        "name": "subPath"
      },
      {
        "name": "subPathExpr"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentConfig",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "kind"
      },
      {
        "name": "metadata"
      },
      {
        "name": "spec"
      },
      {
        "name": "status"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentConfigList",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "apiVersion"
      },
      {
        "name": "items"
      },
      {
        "name": "kind"
      },
      {
        "name": "metadata"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentConfigSpec",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "minReadySeconds"
      },
      {
        "name": "paused"
      },
      {
        "name": "replicas"
      },
      {
        "name": "revisionHistoryLimit"
      },
      {
        "name": "selector"
      },
      {
        "name": "strategy"
      },
      {
        "name": "template"
      },
      {
        "name": "test"
      },
      {
        "name": "triggers"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentConfigStatus",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "availableReplicas"
      },
      {
        "name": "conditions"
      },
      {
        "name": "details"
      },
      {
        "name": "latestVersion"
      },
      {
        "name": "observedGeneration"
      },
      {
        "name": "readyReplicas"
      },
      {
        "name": "replicas"
      },
      {
        "name": "unavailableReplicas"
      },
      {
        "name": "updatedReplicas"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentTriggerPolicy",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "imageChangeParams"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentTriggerImageChangeParams",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "automatic"
      },
      {
        "name": "containerNames"
      },
      {
        "name": "from"
      },
      {
        "name": "lastTriggeredImage"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentStrategy",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "activeDeadlineSeconds"
      },
      {
        "name": "annotations"
      },
      {
        "name": "customParams"
      },
      {
        "name": "labels"
      },
      {
        "name": "recreateParams"
      },
      {
        "name": "resources"
      },
      {
        "name": "rollingParams"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.CustomDeploymentStrategyParams",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "command"
      },
      {
        "name": "environment"
      },
      {
        "name": "image"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.RollingDeploymentStrategyParams",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "intervalSeconds"
      },
      {
        "name": "maxSurge"
      },
      {
        "name": "maxUnavailable"
      },
      {
        "name": "post"
      },
      {
        "name": "pre"
      },
      {
        "name": "timeoutSeconds"
      },
      {
        "name": "updatePeriodSeconds"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.LifecycleHook",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "execNewPod"
      },
      {
        "name": "failurePolicy"
      },
      {
        "name": "tagImages"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentCondition",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "lastTransitionTime"
      },
      {
        "name": "lastUpdateTime"
      },
      {
        "name": "message"
      },
      {
        "name": "reason"
      },
      {
        "name": "status"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentDetails",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "causes"
      },
      {
        "name": "message"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentCause",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "imageTrigger"
      },
      {
        "name": "type"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "name": "io.fabric8.openshift.api.model.DeploymentCauseImageTrigger",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "from"
      },
      {
        "name": "additionalProperties"
      }
    ]
  }
]
